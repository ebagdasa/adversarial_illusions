[general]
output_dir          = 'str: output directory'
model_flag          = '(opt) str: model name to optimize over (see models.py for options)'
model_flags         = '(opt) list: model names to optimize over (if multiple)'
target_model_flag   = '(opt) str: model name to optimize over (if different than model_flag)'
gpu_num             = '(opt) int: gpu number'
gpu_nums            = '(opt) list: gpu numbers (if multiple--need not be same length as model_flags)'
target_gpu_num      = '(opt) int: gpu number (if not in model_flags)'
epochs              = 'int or list: number of epochs. if list, adversarial images are saved at each value.'
batch_size          = 'int: batch size'
epsilon             = 'float: maximum perturbation. (For imagenet, epsilon is divided by 255)'
lr                  = 'float: initial learning rate'
seed                = 'int: random seed'
number_images       = 'int: number of images/audios to attack'
gamma_epochs        = 'int: number of epochs to decrease lr (by a factor of 0.9)'
modality            = '{vision/audio}'
dataset_flag        = '{imagenet/audiocaps/audioset}'
jpeg                = '{true/false}: whether to use jpeg compression'
